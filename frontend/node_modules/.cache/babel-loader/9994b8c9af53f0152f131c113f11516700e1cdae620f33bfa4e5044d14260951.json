{"ast":null,"code":"// src/redux/store.js\nimport { configureStore } from '@reduxjs/toolkit';\n\n// Define your initial state\nconst initialState = {\n  classificationData: []\n};\n\n// Define your reducer\nconst classificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_CLASSIFICATION_DATA':\n      return {\n        ...state,\n        classificationData: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create the Redux store using configureStore\nconst store = configureStore({\n  reducer: {\n    classification: classificationReducer\n  }\n});\nexport default store;","map":{"version":3,"names":["configureStore","initialState","classificationData","classificationReducer","state","action","type","payload","store","reducer","classification"],"sources":["/Users/danishkarur/opt/Learnings_VS_Code/Project_Root/frontend/src/redux/store.js"],"sourcesContent":["// src/redux/store.js\nimport { configureStore } from '@reduxjs/toolkit';\n\n// Define your initial state\nconst initialState = {\n  classificationData: [],\n};\n\n// Define your reducer\nconst classificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_CLASSIFICATION_DATA':\n      return { ...state, classificationData: action.payload };\n    default:\n      return state;\n  }\n};\n\n// Create the Redux store using configureStore\nconst store = configureStore({\n  reducer: {\n    classification: classificationReducer,\n  },\n});\n\nexport default store;\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;;AAEjD;AACA,MAAMC,YAAY,GAAG;EACnBC,kBAAkB,EAAE;AACtB,CAAC;;AAED;AACA,MAAMC,qBAAqB,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EAC9D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,yBAAyB;MAC5B,OAAO;QAAE,GAAGF,KAAK;QAAEF,kBAAkB,EAAEG,MAAM,CAACE;MAAQ,CAAC;IACzD;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;;AAED;AACA,MAAMI,KAAK,GAAGR,cAAc,CAAC;EAC3BS,OAAO,EAAE;IACPC,cAAc,EAAEP;EAClB;AACF,CAAC,CAAC;AAEF,eAAeK,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}