{"ast":null,"code":"var _jsxFileName = \"/Users/danishkarur/opt/Learnings_VS_Code/Project_Root/frontend/src/components/Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { DataContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Questions() {\n  _s();\n  const {\n    questions,\n    options\n  } = useContext(DataContext);\n  console.log(\"Questions state: \", questions); // Log questions state\n  console.log(\"Options state: \", options); // Log options state\n\n  // Check if questions exist and are in an array form\n  if (!Array.isArray(questions) || questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available. Please enter a URL and click Classify.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generated Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), Array.isArray(options[index]) && options[index].length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: options.map((option, optIndex) =>\n        /*#__PURE__*/\n        /* {options[index].map((option, optIndex) => ( */\n        _jsxDEV(\"li\", {\n          children: option\n        }, optIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No options available for this question.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Questions, \"Nz9U8dWTDnGcVQJ9q/m8k6n3ePU=\");\n_c = Questions;\nexport default Questions;\n\n// import React, { useContext } from 'react';\n// import { DataContext } from '../App';\n\n// function Questions() {\n//     const { questions, options } = useContext(DataContext);\n\n//     console.log(\"Questions state: \", questions); // Log questions state\n//     console.log(\"Options state: \", options); // Log options state\n\n//     // Check if questions exist and are in an array form\n//     if (!Array.isArray(questions) || questions.length === 0) {\n//         return <p>No questions available. Please enter a URL and click Classify.</p>;\n//     }\n\n//     return (\n//         <div className=\"questions\">\n//             <h2>Generated Questions</h2>\n//             {questions.map((question, index) => (\n//                 <div key={index}>\n//                     <p>{question}</p>\n//                     {options[index] && (\n//                         <ul>\n//                             {options[index].map((option, optIndex) => (\n//                                 <li key={optIndex}>{option}</li>\n//                             ))}\n//                         </ul>\n//                     )}\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// }\n\n// export default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useContext","DataContext","jsxDEV","_jsxDEV","Questions","_s","questions","options","console","log","Array","isArray","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","question","index","option","optIndex","_c","$RefreshReg$"],"sources":["/Users/danishkarur/opt/Learnings_VS_Code/Project_Root/frontend/src/components/Questions.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { DataContext } from '../App';\n\nfunction Questions() {\n    const { questions, options } = useContext(DataContext);\n\n    console.log(\"Questions state: \", questions); // Log questions state\n    console.log(\"Options state: \", options); // Log options state\n\n    // Check if questions exist and are in an array form\n    if (!Array.isArray(questions) || questions.length === 0) {\n        return <p>No questions available. Please enter a URL and click Classify.</p>;\n    }\n\n    return (\n        <div className=\"questions\">\n            <h2>Generated Questions</h2>\n            {questions.map((question, index) => (\n                <div key={index}>\n                    <p>{question}</p>\n                    {Array.isArray(options[index]) && options[index].length > 0 ? (\n                        <ul>\n                            {options.map((option, optIndex) => (/* {options[index].map((option, optIndex) => ( */\n                                <li key={optIndex}>{option}</li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p>No options available for this question.</p>\n                    )}\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Questions;\n\n\n// import React, { useContext } from 'react';\n// import { DataContext } from '../App';\n\n// function Questions() {\n//     const { questions, options } = useContext(DataContext);\n\n//     console.log(\"Questions state: \", questions); // Log questions state\n//     console.log(\"Options state: \", options); // Log options state\n\n//     // Check if questions exist and are in an array form\n//     if (!Array.isArray(questions) || questions.length === 0) {\n//         return <p>No questions available. Please enter a URL and click Classify.</p>;\n//     }\n\n//     return (\n//         <div className=\"questions\">\n//             <h2>Generated Questions</h2>\n//             {questions.map((question, index) => (\n//                 <div key={index}>\n//                     <p>{question}</p>\n//                     {options[index] && (\n//                         <ul>\n//                             {options[index].map((option, optIndex) => (\n//                                 <li key={optIndex}>{option}</li>\n//                             ))}\n//                         </ul>\n//                     )}\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// }\n\n// export default Questions;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGP,UAAU,CAACC,WAAW,CAAC;EAEtDO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,SAAS,CAAC,CAAC,CAAC;EAC7CE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,OAAO,CAAC,CAAC,CAAC;;EAEzC;EACA,IAAI,CAACG,KAAK,CAACC,OAAO,CAACL,SAAS,CAAC,IAAIA,SAAS,CAACM,MAAM,KAAK,CAAC,EAAE;IACrD,oBAAOT,OAAA;MAAAU,QAAA,EAAG;IAA8D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChF;EAEA,oBACId,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACtBV,OAAA;MAAAU,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BX,SAAS,CAACa,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC3BlB,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,EAAIO;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBP,KAAK,CAACC,OAAO,CAACJ,OAAO,CAACc,KAAK,CAAC,CAAC,IAAId,OAAO,CAACc,KAAK,CAAC,CAACT,MAAM,GAAG,CAAC,gBACvDT,OAAA;QAAAU,QAAA,EACKN,OAAO,CAACY,GAAG,CAAC,CAACG,MAAM,EAAEC,QAAQ;QAAA;QAAM;QAChCpB,OAAA;UAAAU,QAAA,EAAoBS;QAAM,GAAjBC,QAAQ;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,gBAELd,OAAA;QAAAU,QAAA,EAAG;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAChD;IAAA,GAVKI,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWV,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACZ,EAAA,CA9BQD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAgClB,eAAeA,SAAS;;AAGxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}