{"ast":null,"code":"import axios from 'axios';\n//import Questions from '../components/Questions';\n\nexport const FETCH_CLASSIFICATION_RQUEST = 'FETCH_CLASSIFICATION_RQUEST';\nexport const FETCH_CLASSIFICATION_SUCSESS = 'FETCH_CLASSIFICATION_SUCSESS';\nexport const FETCH_CLASSIFICATION_FAILURE = 'FETCH_CLASSIFICATION_FAILURE';\nexport const fetchClassification = url => async dispatch => {\n  dispatch({\n    type: FETCH_CLASSIFICATION_RQUEST\n  });\n  try {\n    const response = await axios.post('http://127.0.0.1:5000/classify', {\n      url\n    });\n    dispatch({\n      type: FETCH_CLASSIFICATION_SUCSESS,\n      payload: {\n        questions: response.data.questions,\n        options: response.data.options\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_CLASSIFICATION_FAILURE,\n      payload: error.message || 'Something went wrong'\n    });\n  }\n};","map":{"version":3,"names":["axios","FETCH_CLASSIFICATION_RQUEST","FETCH_CLASSIFICATION_SUCSESS","FETCH_CLASSIFICATION_FAILURE","fetchClassification","url","dispatch","type","response","post","payload","questions","data","options","error","message"],"sources":["/Users/danishkarur/opt/Learnings_VS_Code/Project_Root/frontend/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\n//import Questions from '../components/Questions';\n\nexport const FETCH_CLASSIFICATION_RQUEST = 'FETCH_CLASSIFICATION_RQUEST';\nexport const FETCH_CLASSIFICATION_SUCSESS = 'FETCH_CLASSIFICATION_SUCSESS';\nexport const FETCH_CLASSIFICATION_FAILURE = 'FETCH_CLASSIFICATION_FAILURE';\n\nexport const fetchClassification = (url) =>async (dispatch) => {\n    dispatch({type: FETCH_CLASSIFICATION_RQUEST});\n\n    try{\n        const response = await axios.post('http://127.0.0.1:5000/classify', { url });\n        dispatch({\n            type: FETCH_CLASSIFICATION_SUCSESS,\n            payload: {\n                questions: response.data.questions,\n                options: response.data.options,\n            },\n        });\n    } catch(error){\n        dispatch({\n            type: FETCH_CLASSIFICATION_FAILURE,\n            payload: error.message || 'Something went wrong',\n        });\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAEA,OAAO,MAAMC,2BAA2B,GAAG,6BAA6B;AACxE,OAAO,MAAMC,4BAA4B,GAAG,8BAA8B;AAC1E,OAAO,MAAMC,4BAA4B,GAAG,8BAA8B;AAE1E,OAAO,MAAMC,mBAAmB,GAAIC,GAAG,IAAI,MAAOC,QAAQ,IAAK;EAC3DA,QAAQ,CAAC;IAACC,IAAI,EAAEN;EAA2B,CAAC,CAAC;EAE7C,IAAG;IACC,MAAMO,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,gCAAgC,EAAE;MAAEJ;IAAI,CAAC,CAAC;IAC5EC,QAAQ,CAAC;MACLC,IAAI,EAAEL,4BAA4B;MAClCQ,OAAO,EAAE;QACLC,SAAS,EAAEH,QAAQ,CAACI,IAAI,CAACD,SAAS;QAClCE,OAAO,EAAEL,QAAQ,CAACI,IAAI,CAACC;MAC3B;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,OAAMC,KAAK,EAAC;IACVR,QAAQ,CAAC;MACLC,IAAI,EAAEJ,4BAA4B;MAClCO,OAAO,EAAEI,KAAK,CAACC,OAAO,IAAI;IAC9B,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}