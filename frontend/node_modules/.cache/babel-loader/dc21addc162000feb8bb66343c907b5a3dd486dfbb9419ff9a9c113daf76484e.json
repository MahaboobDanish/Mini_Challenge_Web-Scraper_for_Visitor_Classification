{"ast":null,"code":"var _jsxFileName = \"/Users/danishkarur/opt/Learnings_VS_Code/Project_Root/frontend/src/components/InputForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { DataContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputForm() {\n  _s();\n  const [url, setUrl] = useState('');\n  const {\n    setQuestions,\n    setOptions\n  } = useContext(DataContext);\n  const handleUrlChange = e => {\n    setUrl(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/classify', {\n        url\n      });\n      console.log(\"API Response:\", response.data); // Log for debugging\n\n      const {\n        questions,\n        options\n      } = response.data;\n      // Validate the structure before setting state\n      if (Array.isArray(questions) && Array.isArray(options)) {\n        setQuestions(questions);\n        setOptions(options);\n      } else {\n        console.error(\"Invalid data structure:\", response.data);\n        setQuestions([]);\n        setOptions([]);\n      }\n\n      // setQuestions(Array.isArray(questions) ? questions : []);\n      // setOptions(Array.isArray(options) ? options : []);\n    } catch (error) {\n      console.error(\"Error fetching classification:\", error);\n      setQuestions([]);\n      setOptions([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Website URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        onChange: handleUrlChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Classify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(InputForm, \"0HtALogfg2K48TVXtbhGJ3kw2CQ=\");\n_c = InputForm;\nexport default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["React","useState","useContext","axios","DataContext","jsxDEV","_jsxDEV","InputForm","_s","url","setUrl","setQuestions","setOptions","handleUrlChange","e","target","value","handleSubmit","preventDefault","response","post","console","log","data","questions","options","Array","isArray","error","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danishkarur/opt/Learnings_VS_Code/Project_Root/frontend/src/components/InputForm.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { DataContext } from '../App';\n\nfunction InputForm() {\n    const [url, setUrl] = useState('');\n    const { setQuestions, setOptions } = useContext(DataContext);\n\n    const handleUrlChange = (e) => {\n        setUrl(e.target.value);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://127.0.0.1:5000/classify', { url });\n            console.log(\"API Response:\", response.data);  // Log for debugging\n\n            const { questions, options } = response.data;\n            // Validate the structure before setting state\n            if (Array.isArray(questions) && Array.isArray(options)) {\n                setQuestions(questions);\n                setOptions(options);\n            } else {\n                console.error(\"Invalid data structure:\", response.data);\n                setQuestions([]);\n                setOptions([]);\n            }\n\n            // setQuestions(Array.isArray(questions) ? questions : []);\n            // setOptions(Array.isArray(options) ? options : []);\n\n        } catch (error) {\n            console.error(\"Error fetching classification:\", error);\n            setQuestions([]);\n            setOptions([]);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                Website URL:\n                <input type=\"text\" value={url} onChange={handleUrlChange} />\n            </label>\n            <button type=\"submit\">Classify</button>\n        </form>\n    );\n}\n\nexport default InputForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM;IAAEU,YAAY;IAAEC;EAAW,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;EAE5D,MAAMS,eAAe,GAAIC,CAAC,IAAK;IAC3BJ,MAAM,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,gCAAgC,EAAE;QAAEX;MAAI,CAAC,CAAC;MAC5EY,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAE;;MAE9C,MAAM;QAAEC,SAAS;QAAEC;MAAQ,CAAC,GAAGN,QAAQ,CAACI,IAAI;MAC5C;MACA,IAAIG,KAAK,CAACC,OAAO,CAACH,SAAS,CAAC,IAAIE,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;QACpDd,YAAY,CAACa,SAAS,CAAC;QACvBZ,UAAU,CAACa,OAAO,CAAC;MACvB,CAAC,MAAM;QACHJ,OAAO,CAACO,KAAK,CAAC,yBAAyB,EAAET,QAAQ,CAACI,IAAI,CAAC;QACvDZ,YAAY,CAAC,EAAE,CAAC;QAChBC,UAAU,CAAC,EAAE,CAAC;MAClB;;MAEA;MACA;IAEJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDjB,YAAY,CAAC,EAAE,CAAC;MAChBC,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAMuB,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBACzBxB,OAAA;MAAAwB,QAAA,GAAO,cAEH,eAAAxB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACf,KAAK,EAAEP,GAAI;QAACuB,QAAQ,EAAEnB;MAAgB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACR9B,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEf;AAAC5B,EAAA,CA5CQD,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA8ClB,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}